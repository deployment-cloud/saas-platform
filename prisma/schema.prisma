model Invitation {
  id        String   @id @default(cuid())
  email     String
  tenantId  String
  tenant    Tenant   @relation(fields: [tenantId], references: [id])
  role      String
  token     String   @unique
  expiresAt DateTime
  accepted  Boolean  @default(false)
  createdAt DateTime @default(now())
}
// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
  provider        = "prisma-client-js"
  previewFeatures = ["accelerate"] // Enable Prisma Accelerate
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  url      = env("DATABASE_URL") // Prisma Accelerate URL
  // Optionally, add directUrl for migrations if you have a direct DB connection
  // directUrl = env("DIRECT_DATABASE_URL")
}

model Invitation {
  id        String   @id @default(cuid())
  email     String
  tenantId  String
  tenant    Tenant   @relation(fields: [tenantId], references: [id])
  role      String
  token     String   @unique
  expiresAt DateTime
  accepted  Boolean  @default(false)
  createdAt DateTime @default(now())
}
  shipments Shipment[] // âœ… Added: to complete the relation
  createdAt DateTime   @default(now())
  provider        = "prisma-client-js"
  previewFeatures = ["accelerate"] // Enable Prisma Accelerate
}

model User {
  provider = "postgresql"
  url      = env("DATABASE_URL") // Prisma Accelerate URL
  // Optionally, add directUrl for migrations if you have a direct DB connection
  // directUrl = env("DIRECT_DATABASE_URL")
  id        String   @id @default(cuid())
  // prisma/schema.prisma

  name      String?
  role      String   @default("user")
  status      String
  // prisma/schema.prisma
