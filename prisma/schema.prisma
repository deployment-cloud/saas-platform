generator client {
  provider = "prisma-client-js"
  previewFeatures = ["tracing"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL="prisma+postgres://accelerate.prisma-data.net/?api_key=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqd3RfaWQiOjEsInNlY3VyZV9rZXkiOiJza19SVmhDZHZSNnlBeVV6MmVrclkwX2oiLCJhcGlfa2V5IjoiMDFLNlJQOUJRRFNWNFE3MjlUVFZRMVRHRU0iLCJ0ZW5hbnRfaWQiOiJmYmQ4NGM4MzIyNTJiZGI5YWNlNjY3ZDg4YjJlMjgzMDczYTEzMjY3ODZhODdjMzZhNDBmZTNiM2ZjZDk1M2M2IiwiaW50ZXJuYWxfc2VjcmV0IjoiMjU3OGVmZWEtZDVmZC00Zjg2LWFiMjUtMjUwYTU5NDNhNmJmIn0.9FfXyZrNUI6Lo59BMdX8kXwck2_5dKss7kaxaJSv0pw")
}

model Tenant {
  id        String   @id @default(cuid())
  name      String
  slug      String   @unique
  users     User[]
  createdAt DateTime @default(now())
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String?
  name      String?
  role      String   @default("USER")
  tenantId  String?
  tenant    Tenant?  @relation(fields: [tenantId], references: [id])
  createdAt DateTime @default(now())
}

model Document {
  id          String   @id @default(cuid())
  tenantId    String?
  ownerId     String?
  type        String
  filename    String
  url         String
  size        Int?
  mimeType    String?
  metadata    Json?
  createdAt   DateTime @default(now())

  rfq         RFQ?     @relation("RFQDocs", fields: [rfqId], references: [id])
  rfqId       String?
}

model RFQ {
  id          String   @id @default(cuid())
  tenantId    String?
  createdById String?
  title       String
  description String?
  type        String
  origin      String?
  destination String?
  currency    String?
  details     Json?
  status      String   @default("open")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  responses   RFQResponse[]
  documents   Document[] @relation("RFQDocs")
}

model RFQResponse {
  id         String   @id @default(cuid())
  rfqId      String
  providerId String?
  quoteJson  Json
  currency   String?
  status     String   @default("pending")
  createdAt  DateTime @default(now())
  rfq        RFQ      @relation(fields: [rfqId], references: [id])
}

model CourierBooking {
  id              String   @id @default(cuid())
  shipmentId      String
  carrier         String
  pickupAddress   Json
  deliveryAddress Json
  packageDetails  Json
  createdAt       DateTime @default(now())
}

model FreightBooking {
  id            String   @id @default(cuid())
  shipmentId    String
  freightMode   String
  containerType String?
  volumeCbM     Float?
  createdAt     DateTime @default(now())
}


